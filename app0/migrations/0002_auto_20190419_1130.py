# Generated by Django 2.1.7 on 2019-04-19 03:30

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('app0', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MimicHistory',
            fields=[
                ('happentime', models.DateTimeField(db_column='HappenTime', primary_key=True, serialize=False)),
                ('p_extern', models.CharField(blank=True, db_column='P_extern', max_length=16, null=True)),
                ('p_inter', models.CharField(blank=True, db_column='P_inter', max_length=16, null=True)),
                ('e1', models.CharField(blank=True, db_column='E1', max_length=16, null=True)),
                ('e2', models.CharField(blank=True, db_column='E2', max_length=16, null=True)),
                ('e3', models.CharField(blank=True, db_column='E3', max_length=16, null=True)),
                ('e4', models.CharField(blank=True, db_column='E4', max_length=16, null=True)),
                ('p_location', models.CharField(blank=True, db_column='P_location', max_length=45, null=True)),
                ('e1_location', models.CharField(blank=True, db_column='E1_location', max_length=45, null=True)),
                ('e2_location', models.CharField(blank=True, db_column='E2_location', max_length=45, null=True)),
                ('e3_location', models.CharField(blank=True, db_column='E3_location', max_length=45, null=True)),
                ('e4_location', models.CharField(blank=True, db_column='E4_location', max_length=45, null=True)),
            ],
            options={
                'db_table': 'MIMIC_HISTORY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MtdHistory',
            fields=[
                ('happentime', models.DateTimeField(db_column='HappenTime', primary_key=True, serialize=False)),
                ('p_extern', models.CharField(blank=True, db_column='P_extern', max_length=16, null=True)),
                ('p_inter', models.CharField(blank=True, db_column='P_inter', max_length=16, null=True)),
                ('e1', models.CharField(blank=True, db_column='E1', max_length=16, null=True)),
                ('e2', models.CharField(blank=True, db_column='E2', max_length=16, null=True)),
                ('p_location', models.CharField(blank=True, db_column='P_location', max_length=45, null=True)),
                ('e1_location', models.CharField(blank=True, db_column='E1_location', max_length=45, null=True)),
                ('e2_location', models.CharField(blank=True, db_column='E2_location', max_length=45, null=True)),
            ],
            options={
                'db_table': 'MTD_HISTORY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('description', models.TextField(blank=True, max_length=64)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='mimicimage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagename', models.CharField(default=365, max_length=32, verbose_name='镜像名')),
                ('service_type', models.CharField(choices=[('web', 'web服务'), ('vnf1', 'vnf1服务'), ('vnf2', 'vnf2服务')], max_length=32)),
                ('appversion', models.IntegerField(default=1, null=True)),
                ('osname', models.CharField(max_length=32, verbose_name='镜像操作系统')),
                ('filepath', models.CharField(max_length=32, verbose_name='镜像路径')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '接口传入参数任务',
                'verbose_name_plural': '接口传入参数任务',
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='mimicintecontrol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(choices=[('web', 'web服务'), ('vnf1', 'vnf1服务'), ('vnf2', 'vnf2服务')], max_length=32)),
                ('service_level', models.IntegerField(choices=[(1, '购买了安全等级为1的服务'), (2, '购买了安全等级为2的服务'), (3, '购买了安全等级为3的服务')], default=1)),
                ('password', models.CharField(max_length=32, verbose_name='mima')),
                ('arbitrule', models.IntegerField(choices=[('23', '2/3'), ('24', '2/4'), ('34', '3/4'), ('35', '3/5'), ('45', '4/5')], verbose_name='裁决规则')),
                ('testname', models.CharField(max_length=32, null=True, unique=True, verbose_name='实例名称')),
                ('imagename', models.CharField(default=365, max_length=32, verbose_name='镜像名')),
                ('flavor', models.CharField(default=365, max_length=32, verbose_name='规格')),
                ('extranet_ip', models.GenericIPAddressField(null=True, unique=True)),
                ('service_available_time', models.IntegerField(default=365, verbose_name='购买的服务时间')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('taskinfo', models.TextField(null=True)),
                ('taskstatus', models.CharField(choices=[('continuing', '正在提供服务功能动态轮换应用服务'), ('stopped', '服务已停止')], max_length=32, null=True)),
                ('intranet_ip1', models.GenericIPAddressField(null=True, unique=True)),
                ('intranet_ip2', models.GenericIPAddressField(null=True, unique=True)),
                ('intranet_ip3', models.GenericIPAddressField(null=True, unique=True)),
                ('intranet_ip4', models.GenericIPAddressField(null=True, unique=True)),
                ('intranet_ip5', models.GenericIPAddressField(null=True, unique=True)),
            ],
            options={
                'verbose_name': '拟态封装任务',
                'verbose_name_plural': '拟态封装任务',
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='Sliceinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slicename', models.CharField(max_length=32, unique=True, verbose_name='slicename')),
                ('netname', models.CharField(max_length=32, unique=True, verbose_name='vxlannetname')),
                ('netid', models.IntegerField(unique=True, verbose_name='vxlannetid')),
            ],
            options={
                'verbose_name': ' qiepian',
                'verbose_name_plural': ' qiepian',
                'ordering': ('slicename',),
            },
        ),
        migrations.CreateModel(
            name='vmallocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(choices=[('web', 'web服务'), ('vnf1', 'vnf1服务'), ('vnf2', 'vnf2服务')], max_length=32)),
                ('service_level', models.IntegerField(choices=[(1, '购买了安全等级为1的服务'), (2, '购买了安全等级为2的服务'), (3, '购买了安全等级为3的服务')], default=1)),
                ('password', models.CharField(max_length=32, verbose_name='mima')),
                ('vmname', models.CharField(max_length=32, verbose_name='虚拟机名称')),
                ('imagename', models.CharField(default=365, max_length=32, verbose_name='镜像名')),
                ('num', models.IntegerField(default=1, verbose_name='部署数量')),
                ('flavor', models.CharField(max_length=32, verbose_name='规格')),
                ('extranet_ip', models.GenericIPAddressField(null=True, unique=True)),
                ('zone', models.CharField(max_length=32, null=True, verbose_name='可用区域')),
                ('service_available_time', models.IntegerField(default=365, verbose_name='购买的服务时间')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('taskinfo', models.TextField(null=True)),
                ('taskstatus', models.CharField(choices=[('continuing', '正在提供服务功能动态轮换应用服务'), ('stopped', '服务已停止')], max_length=32, null=True)),
                ('slice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app0.Sliceinfo')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '动态部署任务',
                'verbose_name_plural': '动态部署任务',
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='vmmigration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=32, verbose_name='mima')),
                ('serverzone_dst', models.CharField(max_length=32)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('migrationvm_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app0.vmallocation')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '动态迁移任务',
                'verbose_name_plural': '动态迁移任务',
                'ordering': ('created',),
            },
        ),
        migrations.AlterUniqueTogether(
            name='executor_info',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='executor_info',
            name='proxy',
        ),
        migrations.DeleteModel(
            name='MTD',
        ),
        migrations.DeleteModel(
            name='VM_INFO',
        ),
        migrations.DeleteModel(
            name='EXECUTOR_INFO',
        ),
        migrations.DeleteModel(
            name='NITAI',
        ),
        migrations.AddField(
            model_name='mimicintecontrol',
            name='slice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app0.Sliceinfo'),
        ),
        migrations.AddField(
            model_name='mimicintecontrol',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
    ]
